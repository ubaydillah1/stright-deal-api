// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Provider {
  Google
  Apple
  Local
}

enum Role {
  Admin
  User
  Visitor
}

enum StatusReview {
  NeedToReview
  InReview
  Reviewed
  Published
  Rejected
}

enum TransmissionType {
  AutomaticCars
  ManualCars
}

enum LoanOrLeaseStatus {
  No
  Loan
  Lease
}

enum PlannedSaleTime {
  In24Hours
  ThisWeek
  ThisMonth
  NotSure
}

enum ExteriorCondition {
  MinorCosmeticDamage
  ModerateCosmeticDamages
  CrackedBodywork
  Rust
  ChippedOrCrackedGlass
  NoExteriorDamage
}

enum InteriorDamage {
  NoticeableStains
  PersistentOdors
  RipsOrTearsInSeats
  DamagedDashboardOrInteriorPanels
  NoInteriorDamage
}

enum TireReplacementTimeframe {
  LessThan12MonthsAgo
  OverAYearAgo
}

enum ConditionStatus {
  Poor
  Good
  Exceptional
}

enum PlannedSaleTimeline {
  Immediately
  AlmostReady
  NotReadyYet
}

enum AdditionalDisclosures {
  RipsOrTearsInSeats
  FireOrFloodDamage
  PreviouslyStolen
  NoNothingElseToDisclose
}

enum TiresType {
  AllSeason
  WinterTires
}

model User {
  id                      String        @id @default(uuid())
  email                   String        @unique
  firstName               String
  lastName                String
  password                String?
  isEmailVerified         Boolean       @default(false)
  emailOtpToken           String?
  expiredEmailOtpToken    DateTime?
  phoneNumber             String?       @unique
  isPhoneVerified         Boolean       @default(false)
  phoneOtpToken           String?
  expiredPhoneOtpToken    DateTime?
  refreshToken            String?
  resetToken              String?
  resetTokenExpiry        DateTime?
  provider                Provider      @default(Local)
  avatar                  String?
  role                    Role          @default(Visitor)
  activityLogs            ActivityLog[]
  Cars                    Car[]
  googleAccessToken       String?
  googleRefreshToken      String?
  googleCalendarConnected Boolean       @default(false)
  googleMeetConnected     Boolean       @default(false)
  googleLastConnectedAt   DateTime?
  createdAt               DateTime      @default(now())
  updatedAt               DateTime      @updatedAt

  @@index([phoneNumber])
  @@map("users")
}

model Car {
  id                       String                   @id @default(uuid())
  user                     User                     @relation(fields: [userId], references: [id])
  userId                   String
  slug                     String                   @unique
  vin                      String?
  miliage                  Int
  statusReview             StatusReview             @default(NeedToReview)
  transmission_type        TransmissionType
  isSoloOwner              Boolean
  color                    String
  loanOrLeaseStatus        LoanOrLeaseStatus
  loanCompany              String?
  remainingBalance         Int?
  monthlyPayment           Int?
  monthsRemaining          Int?
  purchaseOptionAmount     Int?
  isTradeIn                Boolean
  plannedSaleTime          PlannedSaleTime
  additionalFeature        String[]
  exteriorCondition        ExteriorCondition
  interiorDamage           InteriorDamage
  additionalDisclosures    AdditionalDisclosures    @default(NoNothingElseToDisclose)
  keyCount                 Int
  tireSetCount             Int
  tireReplacementTimeframe TireReplacementTimeframe
  tiresType                TiresType
  hasOriginalFactoryRims   Boolean
  hasMechanicalIssues      Boolean
  isDriveable              Boolean
  hasAccidentOrClaimStatus Boolean
  overallConditionStatus   ConditionStatus
  plannedSaleTimeline      PlannedSaleTimeline
  activityLogs             ActivityLog[]
  CarImages                CarImage[]
  createdAt                DateTime                 @default(now())
  updatedAt                DateTime                 @updatedAt

  @@map("cars")
}

model CarImage {
  id       String @id @default(uuid())
  Car      Car    @relation(fields: [carId], references: [id])
  carId    String
  imageUrl String

  @@map("car_images")
}

model ActivityLog {
  id        String   @id @default(uuid())
  Car       Car      @relation(fields: [carId], references: [id])
  carId     String
  User      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("activity_logs")
}
